{"version":3,"sources":["sketch/AvenirNextLTPro-Demi.otf","sketch/Dot.js","sketch/sketch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dot","x","y","sketch","this","position","createVector","random","width","height","target","velocity","p5","Vector","random2D","acceleration","zeroVector","radius","maxSpeed","maxForce","maxMagnitude","add","mult","stroke","fill","ellipse","applyMouseFleeForce","applyArriveForce","previousMouseX","pmouseX","previousMouseY","pmouseY","currentMouseX","mouseX","currentMouseY","mouseY","mouse","fleeForce","flee","applyForce","arriveForce","arrive","force","desired","sub","mag","setMag","steeringForce","limit","desiredMagnitude","speed","map","parent","text","font","dots","firstWordPoints","secondWordPoints","thirdWordPoints","preload","loadFont","fontFile","setup","offsetWidth","offsetHeight","createCanvas","split","firstWord","secondWord","thirdWord","textToPoints","forEach","point","push","fillDots","frameRate","draw","clear","dot","update","applyAllForces","show","App","canvasRef","React","useRef","useEffect","canvasDivElement","current","className","ref","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42c9a9d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AvenirNextLTPro-Demi.de28f71e.otf\";","import p5 from 'p5';\r\n\r\nexport default class Dot {\r\n  constructor(x, y, sketch) {\r\n    this.sketch = sketch;\r\n    this.position = this.sketch.createVector(\r\n      this.sketch.random(this.sketch.width),\r\n      this.sketch.random(this.sketch.height),\r\n    );\r\n\r\n    this.target = this.sketch.createVector(x, y);\r\n    this.velocity = p5.Vector.random2D();\r\n    this.acceleration = p5.Vector.random2D();\r\n    this.zeroVector = this.sketch.createVector(0, 0); // don't modify\r\n\r\n    this.radius = 8;\r\n    this.maxSpeed = 12;\r\n    this.maxForce = 4;\r\n    this.maxMagnitude = 50;\r\n  }\r\n\r\n  update() {\r\n    this.position.add(this.velocity);\r\n    this.velocity.add(this.acceleration);\r\n    this.acceleration.mult(0);\r\n  }\r\n\r\n  show() {\r\n    this.sketch.stroke(255);\r\n    this.sketch.fill(0);\r\n    this.sketch.ellipse(this.position.x, this.position.y, this.radius, this.radius);\r\n  }\r\n\r\n  applyAllForces() {\r\n    this.applyMouseFleeForce();\r\n    this.applyArriveForce();\r\n  }\r\n\r\n  applyMouseFleeForce() {\r\n    const previousMouseX = this.sketch.pmouseX;\r\n    const previousMouseY = this.sketch.pmouseY;\r\n    const currentMouseX = this.sketch.mouseX;\r\n    const currentMouseY = this.sketch.mouseY;\r\n    if (previousMouseX !== currentMouseX || previousMouseY !== currentMouseY) {\r\n      const mouse = this.sketch.createVector(currentMouseX, currentMouseY);\r\n      const fleeForce = this.flee(mouse);\r\n      this.applyForce(fleeForce);\r\n    }\r\n  }\r\n\r\n  applyArriveForce() {\r\n    const arriveForce = this.arrive(this.target);\r\n    this.applyForce(arriveForce);\r\n  }\r\n\r\n  applyForce(force) {\r\n    this.acceleration.add(force);\r\n  }\r\n\r\n  flee(target) {\r\n    const desired = p5.Vector.sub(target, this.position);\r\n    const desiredMagnitude = desired.mag();\r\n\r\n    if (desiredMagnitude < this.maxMagnitude) {\r\n      desired.setMag(this.maxSpeed);\r\n      desired.mult(-1);\r\n      const steeringForce = p5.Vector.sub(desired, this.velocity);\r\n      steeringForce.limit(this.maxForce);\r\n      return steeringForce.mult(7);\r\n    }\r\n\r\n    return this.zeroVector;\r\n  }\r\n\r\n  arrive(target) {\r\n    const desired = p5.Vector.sub(target, this.position);\r\n    const desiredMagnitude = desired.mag();\r\n\r\n    let speed = this.maxSpeed;\r\n    if (desiredMagnitude < this.maxMagnitude) {\r\n      speed = this.sketch.map(desiredMagnitude, 0, 100, 0, this.maxSpeed);\r\n    }\r\n\r\n    desired.setMag(speed);\r\n    const steeringForce = p5.Vector.sub(desired, this.velocity);\r\n    steeringForce.limit(this.maxForce);\r\n\r\n    return steeringForce;\r\n  }\r\n}\r\n","import Dot from './Dot';\r\nimport fontFile from './AvenirNextLTPro-Demi.otf';\r\n\r\nconst defaultFrameRate = 30; // low framerate to avoid too much strain on mobile phones\r\n\r\n\r\nexport default (parent, text) => (sketch) => {\r\n  let font;\r\n  let dots;\r\n  let firstWordPoints;\r\n  let secondWordPoints;\r\n  let thirdWordPoints = [];\r\n\r\n  sketch.preload = () => {\r\n    font = sketch.loadFont(fontFile);\r\n  };\r\n\r\n  const fillDots = (width, height) => {\r\n    dots = [];\r\n    let [firstWord, secondWord, thirdWord] = text.split(' ') // Assumption that text is just 3 words, no more, no less\r\n\r\n    // A dirty hack to make it work on both desktop and mobile phones\r\n    if (width > height) {\r\n      // console.log('desktop view')\r\n\r\n      // ref: https://p5js.org/reference/#/p5.Font/textToPoints\r\n      // I just tweaked these numbers until it \"looked right\", mainly trial and error :D \r\n      // The numbers would be different for different text, any suggestions about better way to do this are welcome :) \r\n      firstWordPoints = font.textToPoints(`${firstWord} ${secondWord}`, width * 0.04, height * 0.33, width * 0.12)\r\n      secondWordPoints = font.textToPoints(thirdWord, width * 0.05, height * 0.83, width * 0.3);\r\n    } else {\r\n      // console.log('in mobile view')\r\n\r\n      firstWordPoints = font.textToPoints(firstWord, width * 0.01, height * 0.3, width * 0.3);\r\n      secondWordPoints = font.textToPoints(secondWord, width * 0.01, height * 0.5, width * 0.25);\r\n      thirdWordPoints = font.textToPoints(thirdWord, width * 0.01, height * 0.7, width * 0.32);\r\n    }\r\n\r\n    firstWordPoints.forEach((point) => {\r\n      dots.push(new Dot(point.x, point.y, sketch));\r\n    });\r\n\r\n    secondWordPoints.forEach((point) => {\r\n      dots.push(new Dot(point.x, point.y, sketch));\r\n    });\r\n\r\n    thirdWordPoints.forEach((point) => {\r\n      dots.push(new Dot(point.x, point.y, sketch));\r\n    });\r\n  };\r\n\r\n  sketch.setup = () => {\r\n    const width = parent.offsetWidth;\r\n    const height = parent.offsetHeight;\r\n    sketch.createCanvas(width, height);\r\n    fillDots(width, height);\r\n    sketch.frameRate(defaultFrameRate);\r\n  };\r\n\r\n  sketch.draw = () => {\r\n    sketch.clear();\r\n    dots.forEach((dot) => {\r\n      dot.update();\r\n      dot.applyAllForces();\r\n      dot.show();\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport sketch from './sketch';\r\nimport p5 from 'p5';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst App = () => {\r\n  const canvasRef = React.useRef(null)\r\n\r\n  React.useEffect(() => {\r\n    const canvasDivElement = canvasRef.current;\r\n    new p5(sketch(canvasDivElement, 'Happy Birthday Mann'), canvasDivElement);\r\n  })\r\n  return (\r\n    <div className=\"main\">\r\n      <div ref={canvasRef} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}